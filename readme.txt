autojs4.1.1alpha2改了几个bug，加了几个添加任务的函数，仿照pro版的，不过只是基础的功能，凑合能用（armeabi是用在arm cpu的app， x86是用在intel cpu的，7z是源码压缩了，因为windows的git做的太啰嗦，不想装）
1.有些界面使用id()不能得到控件
2.开机后不手动启动app而使得device.height和device.width返回值为0的不正确
3.添加了timers.addDisposableTask, timers.addDailyTask, timers.addWeeklyTask, timers.addIntentTask几个函数使脚本可以添加定时任务。使用方法参照pro版本(例子我放进去了）,只有基础功能
4.删掉了社区和市场(只是简单的不显示，初始化没改，代码挺复杂的，不想折腾)
5.版本号 + 1
6.安卓原始输出RECT会把左上和右下两个坐标中间的‘，’换成‘-’，我总怀疑那是个负号，看着很不习惯，替换成','了
7.在添加一次性定时任务时，选择日期时会比实际月份早一个月，修改了（因为12月不能选，1月时直接程序崩溃退出了，不能忍）
8.2022-02-05 修正boundInside有些时候会判断出错(rect为右上左下形式，右上在范围内，左下x<0,y在范围内)
9.2022-02-17 总感觉运行时间长了有内存泄漏，因为有时候手机慢了清理运行程序，关掉autojs可以增加500多M的内存，而一开始运行autojs只占用不到150M的内存，这次改了一个地方，猜测可能是这里出问题了，到今天使用了4天了吧，没什么坏感觉，至于内存泄漏，因为最近不怎么刷视频，autojs用的也少了，下前面版本的可以下一下这个，比前面好不好不知道，至少是不差的。
10.2022-02-28 sleep在我的红米手机屏幕关闭后运行有问题，时间会延长很多，大概2倍多3倍左右的样子，猜测是因为屏幕关闭后系统进入节能模式，cpu时钟降低造成的，看代码thread的sleep是调用系统的，所以可能是系统底层的问题，彻底修改是不可能了，我在autojs的sleep里加了几个循环，把一个长的时间分成了很多小的时间休眠，昨晚到今早试用，效果还不错，计算了一下，如果sleep(24*60*60*1000),会分成大概60来个sleep吧（多数会发生在时间快到的一分钟里），感觉对系统性能不会造成大的影响
11.2022-03-15 原版的autojs里,在查找控件时是由root节点开始,一个个遍历后面的节点,找到符合条件的节点返回,我觉得因为这个才导致的运行时间很不稳定,有时候会延迟好几秒到好几十秒,于是修改了代码,我只试了几个,感觉比原版的因为条件设置可以少搜索一半以上,但是时间花费上似乎并不是很明显,不知道是这个手机速度快还是不是因为这个影响了速度,不过能少比较一些,总也不是坏事,就发布出来了.使用方法是在条件里加上bounds()、boundsContains()、boundsInside()过滤,感觉范围越小越接近目标大小越能减少搜索次数,可能contains更好,因为同样大小的控件,contains肯定比inside小对吧
12.2022-03-20 最近发现autojs的console.time() 和console.timeEnd()在关屏后计时会很不准,查找问题才知道原来是原作者使用的函数android.os.SystemClock.uptimeMillis是从开机到现在的毫秒数(手机睡眠的时间不包括在内),所以我改成了java.lang.System.currentTimeMillis,按照函数说明应该是没有原来的问题,具体没试验,若有问题,在后面会休正.
13.2022-03-26 10的修改失败了,当系统休眠以后,sleep时间无论如何都会大幅度地增加,而且还没什么规律.好在任务的定时运行是可以到毫秒级别,只是原作者在设计程序是用的TimePicker控件只能选到分钟,我查了这控件确实是不能到分钟以下的单位,再修改就要重载系统的控件,应该会加大程序的大小,所以找了个折衷的办法,在(3)的基础上修改了函数,可以在设置task.time时设置到秒,例如每天晚上7点30分45秒运行脚本xx,可以这样写
timers.addDailyTask({
  time: "21:30:45",
  path: "xx"
});
管理下定时任务列表里时间也设置的能显示秒了
另外,此版本还修改了(11)的算法,在前面判断会有问题,不能如愿,感觉这个好了,下载过的人可以试试这个
14.2022-04-09 (13)不是只能脚本设置定时任务到秒吗,这个版本可以手动设置了

ps:
2022-01-25前面的版本在安卓11(我现在手机是这个版本，再前面是不是这样我没试验)上把大的js脚本缩小会导致文件后面的内容删不掉(这不是原生的bug，是我去掉原作在修改脚本后备份文件时产生的)，这个改了，因为没维护版本号，下新的就行，后面的比前面的bug会有修改
